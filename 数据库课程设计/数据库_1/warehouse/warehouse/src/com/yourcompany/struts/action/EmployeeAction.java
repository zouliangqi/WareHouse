/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.yourcompany.struts.action;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.yourcompany.struts.Exception.AppException;
import com.yourcompany.struts.bean.EmployeeInfotable;
import com.yourcompany.struts.dao.EmployeeInfoDao;
import com.yourcompany.struts.form.UpdateuserpasswordForm;

/**
 * MyEclipse Struts Creation date: 07-20-2010
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class EmployeeAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */

	public ActionForward update(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		UpdateuserpasswordForm loginForm = (UpdateuserpasswordForm) form;

		EmployeeInfoDao eio = new EmployeeInfoDao();

		// 获得用户页面输入的原始密码和新密码
		String oldpassword = loginForm.getOldpassword();
		String newpassword = loginForm.getNewpassword();
		String connewpassword = loginForm.getConnewpassword();

		HttpSession session = request.getSession();
		EmployeeInfotable em = (EmployeeInfotable) session.getAttribute("em");

		// 获得当前用户ID
		String employeeId = em.getEmployeeId();
		// 获得当前用户原始密码
         String tempPassword = eio.password(employeeId);
         
			if (oldpassword.equals(tempPassword))
			{
				if(newpassword.length()<3)
		         {
		        	 throw new AppException("password_notnull");
		         }
				if(connewpassword.equals(newpassword))
		        {
				   eio.updateUser(newpassword, employeeId);
				   return mapping.findForward("successinpsw");
		        }
				 else
			        {
				       throw new AppException("conform_error");
			        }	 
			}
			else
			{
				throw new AppException("password_error");
			}
        }
	public ActionForward viewEmployeeInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		
		    EmployeeInfotable eit= new EmployeeInfotable();
		    EmployeeInfoDao eid=new EmployeeInfoDao();
		    
		    HttpSession session = request.getSession();
			EmployeeInfotable em = (EmployeeInfotable) session.getAttribute("em");
			String employeeId = em.getEmployeeId();
			System.out.println(employeeId+"==========");
		    eit=eid.viewEmployeeInfo(employeeId);
			request.setAttribute("eit", eit);
			System.out.println("view===============");
			return mapping.findForward("viewEmployeeInfo");
		}
	public ActionForward viewAllEmployeeInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		    EmployeeInfoDao userDao = new EmployeeInfoDao();
			ArrayList al = userDao.viewAllEmployeeInfo();
			request.setAttribute("al", al);
			userDao =null;
			return mapping.findForward("viewAllEmployeeInfo");
		}	
}
